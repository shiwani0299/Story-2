Version Control Using Git Command Line



Amit@DESKTOP-KSP91BK MINGW64 /d/Complete 20224 Web Development Bootcamp - Udemy/git github and version control (alien-plot)
$ git checkout main
error: Your local changes to the following files would be overwritten by checkout:        git branching and merging/gitbranch-chapter3.txt
Please commit your changes or stash them before you switch branches.
Aborting
Amit@DESKTOP-KSP91BK MINGW64 /d/Complete 20224 Web Development Bootcamp - Udemy/git github and version control/git branching and merging (alien-plot)
$ git checkout main
error: Your local changes to the following files would be overwritten by checkout:      
        git branching and merging/gitbranch-chapter3.txt
Please commit your changes or stash them before you switch branches.
Aborting

Amit@DESKTOP-KSP91BK MINGW64 /d/Complete 20224 Web Development Bootcamp - Udemy/git github and version control/git branching and merging (alien-plot)
$  cd ..

Amit@DESKTOP-KSP91BK MINGW64 /d/Complete 20224 Web Development Bootcamp - Udemy/git github and version control (alien-plot)
$ cd ..

Amit@DESKTOP-KSP91BK MINGW64 /d/Complete 20224 Web Development Bootcamp - Udemy
$ cd "git hub and version control-2"/

Amit@DESKTOP-KSP91BK MINGW64 /d/Complete 20224 Web Development Bootcamp - Udemy/git hub and version control-2
$ mkdir Story

Amit@DESKTOP-KSP91BK MINGW64 /d/Complete 20224 Web Development Bootcamp - Udemy/git hub and version control-2
$ cd Story/

rol-2/Story
$ code chapter1.txt chapter2.txt chapter3.txt chapter4.txt

Amit@DESKTOP-KSP91BK MINGW64 /d/Complete 20224 Web Development Bootcamp - Udemy/git hub and version control-2/Story
$ git init
Initialized empty Git repository in D:/Complete 20224 Web Development Bootcamp - Udemy/git hub and version control-2/Story/.git/



EXPLANATION OF ABOVE CODE
#NOTE: 
//git init command to initialize git in the required directory 
//ls -a command to see all the hidden files, to track all changes, to commit changes, and to perform version control.

// We want to add the file (chapter1.txt) to a "staging area" inside the "working directory". "Staging area" is an intermediate place where we can pick and choose which file inside your working directory that you want to commit.

// git status command is used to see what actually is inside your staging area.
 => this will show untracted file (shown in red color) which is inside the working durectory but not yet in the Staging Area (Intermediate place)

=> in order to add it in the staging area and to stop tracking changes in it we have to use command  ...

//git add filename.extension command  is used in order to add it in the staging area and to stop tracking changes.
  => git add chapter1.txt in this case

Now if we use git status command again it will show :
Amit@DESKTOP-KSP91BK MINGW64 /d/Complete 20224 Web Development Bootcamp - Udemy/git github and version control/git-story-today (main)

$ git status
On branch main

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   chapter1.txt


--- Similarly we will add chapter2.txt, chapter3.txt and chapter4.txt in staging area of working director by using git add command